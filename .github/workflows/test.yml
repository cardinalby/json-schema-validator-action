name: "test"
on: [push, pull_request, workflow_dispatch]

jobs:
  functionalSelfTest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Pack
        run: npm run pack

      - name: Jest tests
        run: npm run test

      - id: actionYmlAgainstGithubActions
        name: Validate action.yml against github-action schema
        uses: ./
        with:
          file: 'action.yml'
          schema: 'https://json.schemastore.org/github-action.json'

      - name: Check actionYmlAgainstGithubActions result
        if: steps.actionYmlAgainstGithubActions.outputs.errorType != ''
        run: |
          echo "${{steps.actionYmlAgainstGithubActions.outputs.errorType}}" &&
          exit 1

      - id: actionYmlAgainstWrongDraft04Schema
        name: Validate action.yml against wrong schema
        continue-on-error: true
        uses: ./
        with:
          file: 'action.yml'
          schema: 'https://json.schemastore.org/sprite.json'

      - name: Check actionYmlAgainstWrongDraft04Schema result
        if: |
          steps.actionYmlAgainstWrongDraft04Schema.outputs.errorType != 'validation' ||
          steps.actionYmlAgainstWrongDraft04Schema.outcome != 'failure'
        run: |
          echo "${{steps.actionYmlAgainstWrongDraft04Schema.outputs.errorType}}" &&
          echo "${{steps.actionYmlAgainstWrongDraft04Schema.outcome}}" &&
          exit 1

      - id: packageJsonAgainstLocalSchema
        name: Validate package.json against local schema
        continue-on-error: true
        uses: ./
        with:
          file: 'package.json'
          schema: 'tests/integration/data/schemas/package.schema.json'

      - name: Check packageJsonAgainstLocalSchema result
        if: steps.packageJsonAgainstLocalSchema.outputs.errorType != ''
        run: |
          echo "${{steps.packageJsonAgainstLocalSchema.outputs.errorType}}" &&
          exit 1

      - id: useSchemaProperty
        name: Validate using $schema property
        continue-on-error: true
        uses: ./
        with:
          file: 'tests/integration/data/schemas/package.schema.json'
          mode: 'lax'

      - name: Check useSchemaProperty result
        if: steps.useSchemaProperty.outputs.errorType != ''
        run: |
          echo "${{steps.useSchemaProperty.outputs.errorType}}" &&
          exit 1

      - id: validateMultipleFiles
        name: Validate multiple files
        continue-on-error: true
        uses: ./
        with:
          file: 'tests/integration/data/files/package_*.json|tests/integration/data/files/3_package.json'
          schema: 'tests/integration/data/schemas/package.schema.json'
          mode: 'lax'

      - name: Check validateMultipleFiles result
        if: steps.validateMultipleFiles.outputs.errorType != ''
        run: |
          echo "${{steps.validateMultipleFiles.outputs.errorType}}" &&
          exit 1

      - id: schemaAgainstDraft2020_12MetaSchema
        name: Validate schema against Draft 2020-12 metaschema
        continue-on-error: true
        uses: ./
        with:
          file: 'tests/integration/data/schemas/2020_12_schema.json'

      - name: Check schemaAgainstDraft2020_12MetaSchema result
        if: steps.schemaAgainstDraft2020_12MetaSchema.outputs.errorType != ''
        run: |
          echo "${{steps.schemaAgainstDraft2020_12MetaSchema.outputs.errorType}}" &&
          exit 1